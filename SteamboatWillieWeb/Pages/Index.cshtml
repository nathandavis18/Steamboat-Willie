@page
@model IndexModel
@using Infrastructure.Models
@inject UserManager<AppUser> UserManager
@{
    ViewData["Title"] = "Home page";
}
@using Utility

<input type="hidden" id="currentUserStartTime" value="@Model.CurrentUserStartTime" />
<input type="hidden" id="currentUserEndTime" value="@Model.CurrentUserEndTime" />

@if (!User.Identity.IsAuthenticated)
{
    <div class="text-center">
        <h1 class="display-4">Welcome!</h1>
        <p class="display-4 login-signup">Please, <a asp-page="/Account/Login" asp-area="Identity">log in</a> or <a asp-page="/Account/Register" asp-area="Identity">sign up</a> to continue</p>
    </div>
}
else if (User.IsInRole(SD.PROVIDER_ROLE) && User.IsInRole(SD.CLIENT_ROLE))
{
    <div class="text-center row">
        <div class="tutor-slider-inner col-md-4 provider-view">
            <label>Provider View</label>
        </div>
        <div class="tutor-slider-div col">
            <label class="switch">
                <input type="checkbox" id="tutor-slider" onchange="tutorSlider()">
                <span class="slider round"></span>
            </label>
        </div>
        <div class="tutor-slider-inner col-md-4 student-view">
            <label>Student View</label>
        </div>
    </div>
    <div id="tutor-provider-view" style="display: contents">
        <head>
            <meta charset='utf-8' />
            <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js'></script>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    var currentUserStartTime = document.getElementById('currentUserStartTime').value;
                    var currentUserEndTime = document.getElementById('currentUserEndTime').value;
                    var calendarEl = document.getElementById('calendar');
                    var calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'dayGridMonth',
                        slotMinTime: '@Model.CurrentUserStartTime',
                        slotMaxTime: '@Model.CurrentUserEndTime',
                        height: 'auto',
                        headerToolbar: {
                            left: 'prev,next',
                            center: 'title',
                            right: 'dayGridMonth,timeGridWeek' // user can switch between the two
                        },
                        navLinks: true,
                        navLinkDayClick: function (date) {
                            var currentDate = new Date();
                            currentDate = currentDate.setDate(currentDate.getDate() - 1);
                            if (date < currentDate) {
                                return;
                            }
                            var year = date.getFullYear();
                            var month = String(date.getMonth() + 1).padStart(2, '0');
                            var day = String(date.getDate()).padStart(2, '0');
                            var formattedDate = year + '-' + month + '-' + day;
                            var redirectTo = 'Availability/Index?date=' + encodeURIComponent(formattedDate);
                            window.location.href = redirectTo;
                        }
                        // eventClick: function (info) { //Needs to be updated with whatever info we want to show on click
                        //     alert('event:' + info.event.title);
                        // }
                    });
                @foreach (var obj in Model.CalendarObj)
                {
                    var backgroundColor = @obj.Type == "Appointment" ? "#32DE84" : "#135DD8";
                    <text>
                                    var e = { id: '@obj.Id.ToString()', title: '@obj.Title.ToString()', start: '@obj.Start.ToString()', end: '@obj.End.ToString()', backgroundColor: '@backgroundColor', url: '@Url.Page("Availability/Details")' + '?id=' + '@obj.Id.ToString()' };
                        calendar.addEvent(e);
                    </text>
                }
                        calendar.render();
                });
            </script>
        </head>
        <body>
            <div class="text-end">
                <a class="btn btn-secondary mb-3" asp-area="" asp-page="Availability/Index">Set Availability</a>
            </div>
            <div id='calendar'></div>
        </body>
    </div>

    <div id="tutor-student-view" style="display: none;">
        <div class="text-center">
            <h1 class="display-4">Welcome, @(UserManager.GetUserAsync(User).GetAwaiter().GetResult() != null ? UserManager.GetUserAsync(User).GetAwaiter().GetResult().FullName : "")</h1>
        </div>
        <br />

        @if (!Model.Appointments.Any())
        {
            <div class="text-center">
                <p>Scheduled appointments will appear here!</p>
            </div>
        }
        else
        {
            <div class="row align-content-center">
                @foreach (var app in Model.Appointments)
                {
                    <div class="col-md-3">
                        <a class="no-decoration" asp-page="" asp-route-id="@app.Id">
                            <div class="card">
                                <div class="card-header" style="background-color: @app.Color">@app.AppointmentType Appointment</div>
                                <div class="card-body">
                                    <strong>@(app.AppointmentType):</strong> @app.ProviderName <br /> <br />
                                    <strong>When:</strong>
                                    @app.Date <br />
                                    <pre>       @app.StartTime - @app.EndTime</pre>
                                    <strong>Where:</strong> @app.Location
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
    </div>
}
else if (User.IsInRole(SD.PROVIDER_ROLE))
{
    <head>
        <meta charset='utf-8' />
        <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js'></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var calendarEl = document.getElementById('calendar');
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth',
                    slotMinTime: '@Model.CurrentUserStartTime',
                    slotMaxTime: '@Model.CurrentUserEndTime',
                    height: 'auto',
                    headerToolbar: {
                        left: 'prev,next',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek' // user can switch between the two
                    },
                    navLinks: true,
                    navLinkDayClick: function (date) {
                        var currentDate = new Date();
                        currentDate = currentDate.setDate(currentDate.getDate() - 1);
                        if (date < currentDate) {
                            return;
                        }
                        var year = date.getFullYear();
                        var month = String(date.getMonth() + 1).padStart(2, '0');
                        var day = String(date.getDate()).padStart(2, '0');
                        var formattedDate = year + '-' + month + '-' + day;
                        var redirectTo = 'Availability/Index?date=' + encodeURIComponent(formattedDate);
                        window.location.href = redirectTo;
                    }
                    // eventClick: function (info) { //Needs to be updated with whatever info we want to show on click
                    //     alert('event:' + info.event.title);
                    // }
                });
            @foreach (var obj in Model.CalendarObj)
            {
                var backgroundColor = @obj.Type == "Appointment" ? "#32DE84" : "#135DD8";
                <text>
                var e = { id: '@obj.Id.ToString()', title: '@obj.Title.ToString()', start: '@obj.Start.ToString()', end: '@obj.End.ToString()', backgroundColor: '@backgroundColor', url:'@Url.Page("Availability/Details")' + '?id=' + '@obj.Id.ToString()'};
                calendar.addEvent(e);
                </text>
            }
                    calendar.render();
            });
        </script>
    </head>
    <body>
        <div class="text-end">
            <a class="btn btn-secondary mb-3" asp-area="" asp-page="Availability/Index">Set Availability</a>
        </div>
        <div id='calendar'></div>
    </body>
}
else if (User.IsInRole(SD.CLIENT_ROLE))
{
    <div class="text-center">
        <h1 class="display-4">Welcome, @(UserManager.GetUserAsync(User).GetAwaiter().GetResult() != null ? UserManager.GetUserAsync(User).GetAwaiter().GetResult().FullName : "")</h1>
    </div>
    <br />

    @if (!Model.Appointments.Any())
    {
        <div class="text-center">
            <p>Scheduled appointments will appear here!</p>
        </div>
    }
    else
    {
        <div class="row align-content-center">
            @foreach (var app in Model.Appointments)
            {
                <div class="col-md-3">
                    <a class="no-decoration" asp-page="/Appointments/Details" asp-route-id="@app.Id">
                        <div class="card">
                            <div class="card-header" style="background-color: @app.Color">@app.AppointmentType Appointment</div>
                            <div class="card-body">
                                <strong>@(app.AppointmentType):</strong> @app.ProviderName <br /> <br />
                                <strong>When:</strong>
                                @app.Date <br />
                                <pre>       @app.StartTime - @app.EndTime</pre>
                                <strong>Where:</strong> @app.Location
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    }
}
else
{
    <div class="text-center">
        <h1 class="display-4">Welcome, @(UserManager.GetUserAsync(User).GetAwaiter().GetResult() != null ? UserManager.GetUserAsync(User).GetAwaiter().GetResult().FullName : "")</h1>
    </div>
}

@section Scripts {
    <script>var slider = document.getElementById('tutor-slider');
        var provider = document.getElementById('tutor-provider-view');
        var client = document.getElementById('tutor-student-view');

        function tutorSlider() {
            if (slider.checked) {
                client.style.display = "block";
                provider.style.display = "none";
            }
            else {
                provider.style.display = "contents";
                client.style.display = "none";
            }
        }</script>
}