@page
@using Utility
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}
<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FName" class="form-control bg-secondary text-white" autocomplete="First Name" aria-required="true" placeholder="John" />
                <label asp-for="Input.FName">First Name</label>
                <span asp-validation-for="Input.FName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.LName" class="form-control bg-secondary text-white" autocomplete="Last Name" aria-required="true" placeholder="Doe" />
                <label asp-for="Input.LName">Last Name</label>
                <span asp-validation-for="Input.LName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control bg-secondary text-white" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control bg-secondary text-white" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control bg-secondary text-white" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.WNumber" class="form-control bg-secondary text-white" autocomplete="wnumber" aria-required="true" placeholder="W#" />
                <label asp-for="Input.WNumber">W#</label>
                <span asp-validation-for="Input.WNumber" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <select asp-for="Input.DepartmentId" asp-items="@Model.Input.Departments" class="form-select bg-secondary text-white"></select>
                @if (!User.IsInRole(SD.ADMIN_ROLE))
                {
                    <label asp-for="ClientInput.DepartmentId"></label>
                    <span asp-validation-for="ClientInput.DepartmentId" class="text-danger"></span>
                }
                else{
                    <label asp-for="ProviderInput.DepartmentId"></label>
                    <span asp-validation-for="ProviderInput.DepartmentId" class="text-danger"></span>
                }
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control bg-secondary text-white" autocomplete="phone number" aria-required="true" placeholder="(123) 456-7890" onInput="this.value = phoneFormat(this.value)" />
                <label asp-for="Input.PhoneNumber">Phone Number</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            @if (!User.IsInRole(SD.ADMIN_ROLE))
            {
                <div class="form-floating mb-3">
                    <select asp-for="ClientInput.ClassLevel" class="form-select bg-secondary text-white" placeholder="Fr. So. Jr. Sr.">
                        <option>Freshman</option>
                        <option>Sophomore</option>
                        <option>Junior</option>
                        <option>Senior</option>
                    </select>
                    <label asp-for="ClientInput.ClassLevel" class="form-label"></label>
                    <span asp-validation-for="ClientInput.ClassLevel" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <select asp-for="ClientInput.StudentType" class="form-select bg-secondary text-white" placeholder="Flex, Regular">
                        <option>Full-Time Student</option>
                        <option>Part-Time Student</option>
                        <option>Flex Student</option>
                    </select>
                    <label asp-for="ClientInput.StudentType" class="form-label"></label>
                    <span asp-validation-for="ClientInput.StudentType" class="text-danger"></span>
                </div>

                @*Validating the model state by completing all required fields*@
                <input asp-for="Input.Role" value="@SD.CLIENT_ROLE" hidden />
                <input asp-for="ProviderInput.Title" value="Valid" hidden />
            }
            else if (User.IsInRole(SD.ADMIN_ROLE) && Model.ProviderInput.CreatingProvider)
            {
                <select asp-for="Input.Role" hidden>
                    <option selected>@SD.PROVIDER_ROLE</option>
                </select>
                <div class="form-floating mb-3" id="TitleSelector">
                    <select asp-for="ProviderInput.Title" class="form-select bg-secondary text-white" placeholder="Choose the best title for this advisor">
                        <option>Advisor</option>
                        <option>Instructor</option>
                        <option>Tutor</option>
                    </select>
                    <label asp-for="ProviderInput.Title" class="form-label"></label>
                </div>

                @*Validating the model state by completing all required fields*@
                <input asp-for="ClientInput.ClassLevel" value="Valid" hidden />
                <input asp-for="ClientInput.StudentType" class="form-check-input bg-secondary text-white" value="Valid" hidden/>
            }
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary mb-2">Register</button>
            <div>
                <p class="text-center">
                    Already have an account?
                    <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl">Login</a>
                </p>
            </div>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                                article
                                about setting up this ASP.NET application to support logging in via external services
                            </a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    if (provider.DisplayName == "Google")
                                    {
                                        <button type="submit" value="@provider.Name" name="provider" title="Sign up using your @provider.DisplayName account" class="gsi-material-button ggl-btn bg-secondary text-white">
                                            <div class="gsi-material-button-state"></div>
                                            <div class="gsi-material-button-content-wrapper">
                                                <div class="gsi-material-button-icon">
                                                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" xmlns:xlink="http://www.w3.org/1999/xlink" style="display: block;">
                                                        <path fill="#EA4335" d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"></path>
                                                        <path fill="#4285F4" d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"></path>
                                                        <path fill="#FBBC05" d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"></path>
                                                        <path fill="#34A853" d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"></path>
                                                        <path fill="none" d="M0 0h48v48H0z"></path>
                                                    </svg>
                                                </div>
                                                <span class="gsi-material-button-contents">Sign up with Google</span>
                                                <span style="display: none;">Sign up with Google</span>
                                            </div>
                                        </button>
                                    }
                                    else if (provider.DisplayName == "Microsoft")
                                    {
                                        <div class="bsk-container">
                                            <button type="submit" value="@provider.Name" name="provider" title="Sign up using your @provider.DisplayName account" class="btn btn-secondary">
                                                <object type="image/svg+xml" data="https://s3-eu-west-1.amazonaws.com/cdn-testing.web.bas.ac.uk/scratch/bas-style-kit/ms-pictogram/ms-pictogram.svg" class="x-icon"></object>
                                                Sign up with Microsoft
                                            </button>
                                        </div>
                                    }
                                    else
                                    {
                                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Sign up using your @provider.DisplayName account">@provider.DisplayName</button>
                                    }
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function phoneFormat(input) {//returns (###) ###-####
            input = input.replace(/\D/g, '');
            var size = input.length;
            if (size > 0) { input = "(" + input }
            if (size > 3) { input = input.slice(0, 4) + ") " + input.slice(4, 11) }
            if (size > 6) { input = input.slice(0, 9) + "-" + input.slice(9) }
            return input;
        }
    </script>
}
