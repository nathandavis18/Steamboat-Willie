@page
@using Utility
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.css" integrity="sha512-zxBiDORGDEAYDdKLuYU9X/JaJo/DPzE42UubfBw9yg8Qvb2YRRIQ8v4KsGHOx2H1/+sdSXyXxLXv5r7tHc9ygg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<h3>@ViewData["Title"]</h3>

@*Image Cropping Stuff Going Here*@

<div class="modal" tabindex="-1" role="dialog" id="details-modal" style="margin-top: 5%;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div id="cropper"></div>
            <button id="saveCropper" onclick="saveImage()" class="btn btn-success">Update Image</button>
            <form asp-page-handler="Image" id="croppieForm" method="post" enctype="multipart/form-data">
            </form>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-6 profile-information-div">
        <form id="profile-form" method="post">
            @if(User.IsInRole(SD.PROVIDER_ROLE) && User.IsInRole(SD.CLIENT_ROLE)) //If they are a tutor
            {
                <input asp-for="ProviderInput.Title" value="Tutor" hidden />
                <input asp-for="ProviderInput.AdvisementTypes" value="," hidden />
            }
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FName" class="form-control bg-secondary text-white" autocomplete="First Name" aria-required="true" placeholder="John" />
                <label asp-for="Input.FName">First Name</label>
                <span asp-validation-for="Input.FName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.LName" class="form-control bg-secondary text-white" autocomplete="Last Name" aria-required="true" placeholder="Doe" />
                <label asp-for="Input.LName">Last Name</label>
                <span asp-validation-for="Input.LName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control bg-secondary text-white" autocomplete="phone number" aria-required="true" placeholder="(123) 456-7890" onInput="this.value = phoneFormat(this.value)" />
                <label asp-for="Input.PhoneNumber">Phone Number</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            @if(User.IsInRole(SD.PROVIDER_ROLE))
            {
                <div class="form-floating mb-3">
                    <input asp-for="ProviderInput.StartTime" class="form-control bg-secondary text-white" required />
                    <label asp-for="ProviderInput.StartTime" class="form-label"></label>
                    <span asp-validation-for="ProviderInput.StartTime" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="ProviderInput.EndTime" class="form-control bg-secondary text-white" required />
                    <label asp-for="ProviderInput.EndTime" class="form-label"></label>
                    <span asp-validation-for="ProviderInput.EndTime" class="text-danger"></span>
                </div>
            }
            @if (User.IsInRole(SD.PROVIDER_ROLE) && !User.IsInRole(SD.CLIENT_ROLE)) //Just Provider Role, not tutor
            {
                <div class="form-floating mb-3">
                    <input asp-for="Input.WNumber" class="form-control bg-secondary text-white" autocomplete="wnumber" aria-required="true" placeholder="W#" required />
                    <label asp-for="Input.WNumber">W#</label>
                    <span asp-validation-for="Input.WNumber" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <select asp-for="ProviderInput.DepartmentId" asp-items="@Model.ProviderInput.Departments" class="form-select bg-secondary text-white"></select>
                    <label asp-for="ProviderInput.DepartmentId" class="form-label"></label>
                </div>
                <div class="form-floating mb-3" id="TitleSelector">
                    <select asp-for="ProviderInput.Title" class="form-select bg-secondary text-white" placeholder="Choose the best title for this advisor" id="providerTitle" onchange="titleChange(this.value)">
                        <option>Advisor</option>
                        <option>Instructor</option>
                        <option>Tutor</option>
                    </select>
                    <label asp-for="ProviderInput.Title" class="form-label"></label>
                </div>
                <div class="form-floating mb-3" style="@(Model.ProviderInput.Title.Equals("Advisor") == false ? "display: none" : "display: block")" id="advisementTypes">
                    <div>
                    <label asp-for="ProviderInput.AdvisementTypes" class="form-label"></label>
                    </div>
                    <div class="form-check">
                    <label asp-for="ProviderInput.NewStudent" class="form-check-label"></label>
                    <input asp-for="ProviderInput.NewStudent" class="form-check-input bg-secondary text-white" />
                    </div>
                    <div class="form-check">
                    <label asp-for="ProviderInput.ExistingStudent" class="form-check-label"></label>
                    <input asp-for="ProviderInput.ExistingStudent" class="form-check-input bg-secondary text-white" />
                    </div>
                    <div class="form-check">
                    <label asp-for="ProviderInput.FlexStudent" class="form-check-label"></label>
                    <input asp-for="ProviderInput.FlexStudent" class="form-check-input bg-secondary text-white" />
                    </div>
                </div>
            }
            @if (User.IsInRole(SD.CLIENT_ROLE)) //Can't do else if, since this can apply to tutors
            {
                @if (User.IsInRole(SD.PROVIDER_ROLE))
                {
                    <input type="checkbox" asp-for="WeberStudentInput.IsWeberStudent" class="form-check-input" checked hidden/>
                }
                else
                {
                    <div class="form-check mb-3">
                        <input type="checkbox" asp-for="WeberStudentInput.IsWeberStudent" class="form-check-input" onchange="weberStudent()" id="weber-checkbox"/>
                        <label asp-for="WeberStudentInput.IsWeberStudent" class="form-check-label"></label>
                    </div>
                }
                <div id="weber-student-stuff" style="@(Model.WeberStudentInput.IsWeberStudent == true ? "display: block;" : "display: none;")">
                    <div class="form-floating mb-3">
                        <input asp-for="Input.WNumber" class="form-control bg-secondary text-white" autocomplete="wnumber" aria-required="true" placeholder="W#" required/>
                        <label asp-for="Input.WNumber">W#</label>
                        <span asp-validation-for="Input.WNumber" class="text-danger"></span>
                    </div>

                    <div class="form-floating mb-3">
                        <select asp-for="WeberStudentInput.DepartmentId" asp-items="@Model.WeberStudentInput.Departments" class="form-select bg-secondary text-white"></select>
                        <label asp-for="WeberStudentInput.DepartmentId" class="form-label"></label>
                    </div>

                    <div class="form-floating mb-3">
                        <select asp-for="WeberStudentInput.ClassLevel" class="form-select bg-secondary text-white">
                            <option>Freshman</option>
                            <option>Sophomore</option>
                            <option>Junior</option>
                            <option>Senior</option>
                        </select>
                        <label asp-for="WeberStudentInput.ClassLevel" class="form-label"></label>
                        <span asp-validation-for="WeberStudentInput.ClassLevel" class="text-danger"></span>
                    </div>

                    <div class="form-floating mb-3">
                        <select asp-for="WeberStudentInput.StudentType" class="form-select bg-secondary text-white">
                            <option>Full-Time Student</option>
                            <option>Part-Time Student</option>
                            <option>Flex Student</option>
                        </select>
                        <label asp-for="WeberStudentInput.StudentType" class="form-label"></label>
                        <span asp-validation-for="WeberStudentInput.StudentType" class="text-danger"></span>
                    </div>
                </div>
            }
            @if (User.IsInRole(SD.PROVIDER_ROLE) && Model.CurrentUserTitle != "Advisor")
            {
                <div class="mb-3 form-floating" id="classes">
                    <div class="dropdown">
                        <button class="btn btn-secondary form-control text-start dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            <span class="float-start">Select Classes</span>
                            <span class="float-end"><i class="bi bi-caret-down-fill"></i></span>
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            @foreach (var classItem in Model.Classes)
                            {
                                bool isChecked = Model.ProviderClasses.Any(item => item.Value == classItem.Value);
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="@(classItem.Value)" value="@(classItem.Value)" name="Classes" @(isChecked ? "checked" : "")>
                                    <label class="form-check-label" for="@(classItem.Value)">@classItem.Text</label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            @if (User.IsInRole(SD.PROVIDER_ROLE))
            {
                <div style="width:100%" class="mb-3 form-control-color form-control bg-secondary text-muted">
                    <small><label asp-for="ProviderInput.Color" class="form-label ms-2"></label></small>
                    @if (Model.ProviderInput.Color == null)
                    {
                        <input asp-for="ProviderInput.Color" type="color" class="border border-secondary" onchange="clickColor(0, -1, -1, 5)" value="#135DD8" style="width:100%;">
                    }
                    else
                    {
                        <input asp-for="ProviderInput.Color" type="color" class="border border-secondary" onchange="clickColor(0, -1, -1, 5)" value="@Model.ProviderInput.Color" style="width:100%;">
                    }
                </div>
            }
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Save Changes</button>
        </form>
        <br />
        <div class="form-floating mb-3">
            <form id="googleCalendarForm" method="post">
                @if (Model.Input.IsIntegrated)
                {
                    <input type="submit" class="btn btn-warning" asp-page-handler="GoogleCalendarIntegration" asp-route-integrate="@false" value="Disable Google Calendar Integration" />
                }
                else
                {
                    <input type="submit" class="btn btn-success" asp-page-handler="GoogleCalendarIntegration" asp-route-integrate="@true" value="Enable Google Calendar Integration" />
                }
            </form>
        </div>
    </div>
    
    <div class="profile-image-div">
        <div class="profile-image-container">
            <form enctype="multipart/form-data" method="post">
                <input asp-for="FileInput.ImgFile" type="file" class="profile-image-btn form-control" id="pfp-upload-btn" accept="image/*" onchange="uploadImage(this)"/>
                <img src="~/images/profileimages/@Html.Raw(Model.Input.ProfilePictureURL)" class="profile-image" id="pfp", title="Click to change image!"/>
                <input type="submit" asp-page-handler="Image" id="pfp-upload-submit" hidden/>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js" integrity="sha512-Gs+PsXsGkmr+15rqObPJbenQ2wB3qYvTHuJO6YJzPe/dTLvhy0fmae2BcnaozxDo5iaF8emzmCZWbQ1XXiX2Ig==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        function phoneFormat(input) {//returns (###) ###-####
            input = input.replace(/\D/g, '');
            var size = input.length;
            if (size > 0) { input = "(" + input }
            if (size > 3) { input = input.slice(0, 4) + ") " + input.slice(4, 11) }
            if (size > 6) { input = input.slice(0, 9) + "-" + input.slice(9) }
            return input;
        }

        function titleChange(value) {
            if (value == 'Advisor') {
                var p = document.getElementById('advisementTypes');
                var c = document.getElementById('classes');
                p.style.display = 'block';
                c.style.display = 'none';
            }
            else {
                var p = document.getElementById('advisementTypes');
                var c = document.getElementById('classes');
                c.style.display = 'block';
                p.style.display = 'none';
            }
        }
    </script>

    <script> //Profile Image Stuff

        var modalOpened = false;

        $('#pfp').on('click', function () {
            $('#pfp-upload-btn').click();
        });

        var allowedExtensions =
            /(\.jpg|\.jpeg|\.png|\.gif|\.xbm|\.tif|\.jfif|\.ico|\.tiff|\.gif|\.svg|\.svgz|\.webp|\.bmp|\.pjp|\.apng|\.pjpeg|\.avif)$/i; //List of valid image formats

        function uploadImage(file) {
            // if (!allowedExtensions.exec(file.value)) {
            //     alert('Invalid image format uploaded');
            // } else{
            //     $('#pfp-upload-submit').click();
            // }
            if (!allowedExtensions.exec(file.value)) {
                alert('Invalid image');
            } else {
                cropFile();
            }
        }
        var croppedImage = $('#cropper').croppie({
            viewport: { width: 250, height: 250, type: 'circle' },
            boundary: { width: 400, height: 400 },
            showZoomer: true,
            url: '/',
            format: 'png',

        });

        function cropFile() {
            $('#details-modal').modal('show');
            modalOpened = true;
            var file = document.getElementById('pfp-upload-btn').files[0];
            var reader = new FileReader();
            reader.onload = function (event) {
                var contents = event.target.result;
                croppedImage.croppie('bind', {
                    url: contents
                });
            };
            reader.readAsDataURL(file);

        }

        function saveImage(){
            croppedImage.croppie('result', 'base64').then(function (blob) {
                var input = $("<input>").attr("type", "hidden").attr("name", "blob").val(blob);
                $('#croppieForm').append(input);
                $('#croppieForm').submit();
            });
        }

        $('#details-modal').on('hidden.bs.modal', function () {
            location.reload();
        });
    </script>

    <script>
        function weberStudent() {
            if ($('#weber-checkbox').is(':checked')) {
                $('#weber-student-stuff').show();
            }
            else {
                $('#weber-student-stuff').hide();
            }
        }
    </script>
}